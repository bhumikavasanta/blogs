{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhumi\\\\OneDrive\\\\Desktop\\\\Projects\\\\CRUD app\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './App.css';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [excelFile, setExcelFile] = useState(null);\n  const [typeError, setTypeError] = useState(null);\n  const [excelData, setExcelData] = useState(null);\n  const handleFile = e => {\n    let fileTypes = ['application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'text/csv'];\n    let selectedfile = e.target.files[0];\n    if (selectedfile) {\n      if (selectedfile && fileTypes.includes(selectedfile.type)) {\n        setTypeError(null);\n        let reader = new FileReader();\n        reader.readAsArrayBuffer(selectedfile);\n        reader.onload = e => {\n          setExcelFile(e.target.result);\n        };\n      } else {\n        setTypeError(\"Select Excel\");\n        setExcelFile(null);\n        // console.log(typeError);\n        // console.log(selectedfile.type);\n      }\n    } else {\n      setTypeError(\"Select Excel\");\n      setExcelFile(null);\n    }\n  };\n  const handleFileSubmit = e => {\n    e.preventDefault();\n    console.log(\"Func\");\n    if (excelFile !== null) {\n      const workbook = XLSX.read(excelFile, {\n        type: 'buffer'\n      });\n      const worksheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[worksheetName];\n      const data = XLSX.utils.sheet_to_json(worksheet);\n      console.log(data);\n      setExcelData(data.slice(0, 10));\n      console.log(excelData);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Excel Upload\", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFileSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        required: true,\n        onChange: handleFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), typeError && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [typeError, \"Hi\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: excelData ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: Object.keys(excelData[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [key, \"A\"]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: excelData.map((individualExcelData, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: Object.keys(individualExcelData).map(key => /*#__PURE__*/_jsxDEV(\"td\", {\n                children: individualExcelData[key]\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 27\n              }, this))\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No file uploaded yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"BYRKfuvjPEOXRnFHrxmBLJ/bIU8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","XLSX","jsxDEV","_jsxDEV","App","_s","excelFile","setExcelFile","typeError","setTypeError","excelData","setExcelData","handleFile","e","fileTypes","selectedfile","target","files","includes","type","reader","FileReader","readAsArrayBuffer","onload","result","handleFileSubmit","preventDefault","console","log","workbook","read","worksheetName","SheetNames","worksheet","Sheets","data","utils","sheet_to_json","slice","children","onSubmit","required","onChange","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","key","individualExcelData","index","_c","$RefreshReg$"],"sources":["C:/Users/bhumi/OneDrive/Desktop/Projects/CRUD app/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\"\r\nimport './App.css'\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst App = () => {\r\n\r\n  const [excelFile, setExcelFile] = useState(null);\r\n  const[typeError, setTypeError] = useState(null);\r\n\r\n  const [excelData, setExcelData] = useState(null);\r\n\r\n  const handleFile = (e) => {\r\n    let fileTypes = ['application/vnd.ms-excel','application/vnd.openxmlformats-officedocument.spreadsheetml.sheet','text/csv'];\r\n    let selectedfile = e.target.files[0];\r\n    if(selectedfile) {\r\n      if(selectedfile && fileTypes.includes(selectedfile.type)){\r\n        setTypeError(null);\r\n        let reader = new FileReader();\r\n        reader.readAsArrayBuffer(selectedfile);\r\n        reader.onload= (e) => {\r\n          setExcelFile(e.target.result);\r\n        }\r\n      }\r\n      else {\r\n        setTypeError(\"Select Excel\");\r\n        setExcelFile(null);\r\n        // console.log(typeError);\r\n        // console.log(selectedfile.type);\r\n      }\r\n    } else {\r\n      setTypeError(\"Select Excel\");\r\n      setExcelFile(null);\r\n    }\r\n  }\r\n\r\n  const handleFileSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Func\");\r\n    if(excelFile!==null) {\r\n      const workbook = XLSX.read(excelFile,{type: 'buffer'});\r\n      const worksheetName = workbook.SheetNames[0];\r\n      const worksheet = workbook.Sheets[worksheetName];\r\n      const data = XLSX.utils.sheet_to_json(worksheet);\r\n      console.log(data);\r\n      setExcelData(data.slice(0,10));\r\n      console.log(excelData);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      Excel Upload\r\n      <form onSubmit={handleFileSubmit}>\r\n        <input type=\"file\" required onChange={handleFile}/>\r\n        <button type=\"submit\">\r\n          Upload\r\n        </button>\r\n        {\r\n          typeError && (\r\n            <div>\r\n              {typeError}\r\n              Hi\r\n            </div>\r\n          )\r\n        }\r\n      </form>\r\n      <div>\r\n        {\r\n          excelData ? (\r\n            <div>\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    {\r\n                      Object.keys(excelData[0]).map((key) => (\r\n                        <th key={key}>\r\n                          {key}\r\n                          A\r\n                        </th>\r\n                      ))\r\n                    }\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {\r\n                    excelData.map((individualExcelData, index) => (\r\n                      <tr  key={index}>\r\n                        {Object.keys(individualExcelData).map((key) => (\r\n                          <td key={key}>\r\n                            {individualExcelData[key]}\r\n                          </td>\r\n                        ))}\r\n                      </tr>\r\n                    ))\r\n                  }\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              No file uploaded yet\r\n            </div>\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
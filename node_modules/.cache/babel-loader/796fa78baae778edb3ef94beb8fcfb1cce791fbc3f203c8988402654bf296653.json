{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhumi\\\\OneDrive\\\\Desktop\\\\Projects\\\\CRUD app\\\\src\\\\App.jsx\";\nimport React, { useState } from \"react\";\nimport './App.css';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Excel Upload\", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFileSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        required: true,\n        onChange: handleFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), typeError && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [typeError, \"Hi\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: excelData ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: Object.keys(excelData[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [key, \"A\"]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: excelData.map((individualExcelData, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: Object.keys(individualExcelData).map(key => /*#__PURE__*/_jsxDEV(\"td\", {\n                children: individualExcelData[key]\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 27\n              }, this))\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No file uploaded yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","XLSX","jsxDEV","_jsxDEV","App","children","onSubmit","handleFileSubmit","type","required","onChange","handleFile","fileName","_jsxFileName","lineNumber","columnNumber","typeError","excelData","Object","keys","map","key","individualExcelData","index","_c","$RefreshReg$"],"sources":["C:/Users/bhumi/OneDrive/Desktop/Projects/CRUD app/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\"\r\nimport './App.css'\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <div>\r\n      Excel Upload\r\n      <form onSubmit={handleFileSubmit}>\r\n        <input type=\"file\" required onChange={handleFile}/>\r\n        <button type=\"submit\">\r\n          Upload\r\n        </button>\r\n        {\r\n          typeError && (\r\n            <div>\r\n              {typeError}\r\n              Hi\r\n            </div>\r\n          )\r\n        }\r\n      </form>\r\n      <div>\r\n        {\r\n          excelData ? (\r\n            <div>\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    {\r\n                      Object.keys(excelData[0]).map((key) => (\r\n                        <th key={key}>\r\n                          {key}\r\n                          A\r\n                        </th>\r\n                      ))\r\n                    }\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {\r\n                    excelData.map((individualExcelData, index) => (\r\n                      <tr  key={index}>\r\n                        {Object.keys(individualExcelData).map((key) => (\r\n                          <td key={key}>\r\n                            {individualExcelData[key]}\r\n                          </td>\r\n                        ))}\r\n                      </tr>\r\n                    ))\r\n                  }\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              No file uploaded yet\r\n            </div>\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAO,KAAKC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAEhB,oBACED,OAAA;IAAAE,QAAA,GAAK,cAEH,eAAAF,OAAA;MAAMG,QAAQ,EAAEC,gBAAiB;MAAAF,QAAA,gBAC/BF,OAAA;QAAOK,IAAI,EAAC,MAAM;QAACC,QAAQ;QAACC,QAAQ,EAAEC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACnDZ,OAAA;QAAQK,IAAI,EAAC,QAAQ;QAAAH,QAAA,EAAC;MAEtB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAEPC,SAAS,iBACPb,OAAA;QAAAE,QAAA,GACGW,SAAS,EAAC,IAEb;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEC,CAAC,eACPZ,OAAA;MAAAE,QAAA,EAEIY,SAAS,gBACPd,OAAA;QAAAE,QAAA,eACEF,OAAA;UAAAE,QAAA,gBACEF,OAAA;YAAAE,QAAA,eACEF,OAAA;cAAAE,QAAA,EAEIa,MAAM,CAACC,IAAI,CAACF,SAAS,CAAC,CAAC,CAAC,CAAC,CAACG,GAAG,CAAEC,GAAG,iBAChClB,OAAA;gBAAAE,QAAA,GACGgB,GAAG,EAAC,GAEP;cAAA,GAHSA,GAAG;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAGR,CACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEF;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRZ,OAAA;YAAAE,QAAA,EAEIY,SAAS,CAACG,GAAG,CAAC,CAACE,mBAAmB,EAAEC,KAAK,kBACvCpB,OAAA;cAAAE,QAAA,EACGa,MAAM,CAACC,IAAI,CAACG,mBAAmB,CAAC,CAACF,GAAG,CAAEC,GAAG,iBACxClB,OAAA;gBAAAE,QAAA,EACGiB,mBAAmB,CAACD,GAAG;cAAC,GADlBA,GAAG;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAER,CACL;YAAC,GALMQ,KAAK;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAMX,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,gBAENZ,OAAA;QAAAE,QAAA,EAAK;MAEL;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAS,EAAA,GA5DKpB,GAAG;AA8DT,eAAeA,GAAG;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}